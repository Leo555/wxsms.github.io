{"meta":{"id":"angular-tutorial-templating-links-and-images","title":"Angular 教程：模板化的链接与图片","date":"2015-12-28T15:46:08.000Z","categories":["JavaScript"],"tags":["AngularJs"]},"html":"<p>在这一步中你将学习给手机列表添加一个图片链接（暂时不会链接到其他地方）。随后你将使用链接来给手机列表显示一些附加的信息。</p>\n<ul>\n<li>列表中现在包含图片与链接了</li>\n</ul>\n<p>最重要的改动如下所示。你可以在<a href=\"https://github.com/angular/angular-phonecat/compare/step-5...step-6\" title=\"See diff on Github\">GitHub</a>上查看它与之前的代码有何区别。</p>\n<hr>\n<h2 role=\"anchor\">\n            <a name=\"数据\" role=\"anchor\">数据</a>\n          </h2><p>需要注意的是<code>phones.json</code>文件中每条手机记录都包含了ID与图片URL，URL指向的是<code>app/img/phones/</code>目录。</p>\n<p><code>app/phones/phones.json</code>：</p>\n<pre><code>[\n  {\n    ...\n    <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"motorola-defy-with-motoblur\"</span>,\n    <span class=\"hljs-string\">\"imageUrl\"</span>: <span class=\"hljs-string\">\"img/phones/motorola-defy-with-motoblur.0.jpg\"</span>,\n    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Motorola DEFY\\u2122 with MOTOBLUR\\u2122\"</span>,\n    ...\n  },\n  ...\n]\n</code></pre><hr>\n<h2 role=\"anchor\">\n            <a name=\"模板\" role=\"anchor\">模板</a>\n          </h2><p><code>app/index.html</code> ：</p>\n<pre><code><span class=\"xml\">...\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"phones\"</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"phone in phones | filter:query | orderBy:orderProp\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"thumbnail\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#/phones/</span></span></span><span class=\"hljs-template-variable\">{{phone.id}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"thumb\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">ng-src</span>=<span class=\"hljs-string\">\"</span></span></span><span class=\"hljs-template-variable\">{{phone.imageUrl}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#/phones/</span></span></span><span class=\"hljs-template-variable\">{{phone.id}}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">\"</span>&gt;</span></span><span class=\"hljs-template-variable\">{{phone.name}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span></span><span class=\"hljs-template-variable\">{{phone.snippet}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n...</span>\n</code></pre><p>动态生成的链接以后将会链接到手机的详细信息页面，我们使用了熟悉的双花括号来给<code>href</code>属性添加绑定。</p>\n<p>在step 2中，我们使用了<code>{{phone.name}}</code>来绑定元素内容。在这一步中<code>{{phone.id}}</code>将作为元素属性的绑定。 同时我们也使用<code>&lt;img&gt;</code>标签以及<a href=\"https://docs.angularjs.org/api/ng/directive/ngSrc\">ngSrc</a>指令给每一条手机记录添加了一张图片。这个指令的目的是防止浏览器将Angular表达式按照字面意思去读取，然后发起一个错误的请求URL <a href=\"http://localhost:8000/app/{{phone.imageUrl}}\">http://localhost:8000/app/{{phone.imageUrl}}</a>（比如我们这样写<code>&lt;img src=&quot;{{phone.imageUrl}}&quot;&gt;</code>）。使用<code>ngSrc</code>指令可以防止浏览器向错误的地址发起请求。</p>\n<hr>\n<h2 role=\"anchor\">\n            <a name=\"测试\" role=\"anchor\">测试</a>\n          </h2><p><code>test/e2e/scenarios.js</code>：</p>\n<pre><code>...\n    it(<span class=\"hljs-string\">'should render phone specific links'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">var</span> query = element(by.model(<span class=\"hljs-string\">'query'</span>));\n      query.sendKeys(<span class=\"hljs-string\">'nexus'</span>);\n      element.all(by.css(<span class=\"hljs-string\">'.phones li a'</span>)).first().click();\n      browser.getLocationAbsUrl().then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">url</span>) </span>{\n        expect(<span class=\"hljs-built_in\">url</span>).toBe(<span class=\"hljs-string\">'/phones/nexus-s'</span>);\n      });\n    });\n...\n</code></pre><p>我们给端到端测试添加了一项新的内容来验证应用生成了正确的链接。我们将会在接下来的步骤中实现它们。 你可以通过执行<code>npm run protractor</code>来观察测试运行。</p>\n<h2 role=\"anchor\">\n            <a name=\"课外扩展\" role=\"anchor\">课外扩展</a>\n          </h2><p>将<code>ng-src</code>替换成原始的<code>src</code>属性，通过一些开发工具（比如Firebug或者Chrome开发者工具）来观察应用是否发起了错误的请求，比如说<code>/app/%7B%7Bphone.imageUrl%7D%7D</code>或者<code>/app/{{phone.imageUrl}}</code>造成这个问题的原因是浏览器会在读取到<code>&lt;img&gt;</code>标签的瞬间就向其地址发起请求，这时候Angular都还没有来得及计算表达式的结果呢。</p>\n<h2 role=\"anchor\">\n            <a name=\"总结\" role=\"anchor\">总结</a>\n          </h2><p>现在我们给列表添加了图片和连接，通过<a href=\"/p/angular-tutorial-routing-and-multiple-views/\">step 7</a>来学习Angular的布局模板以及Angular是如何让创建多页面应用变得简单的。</p>\n"}