{"meta":{"id":"mean-js-use-forever-to-prevent-app-crash","title":"MEAN.JS 搭配 forever 使用以防止 app crash","date":"2016-05-19T15:24:46.000Z","categories":["JavaScript"],"tags":["Grunt","MEAN-Stack","NodeJs"]},"html":"<p>MEANJS 预设的 Grunt task 中没有提供类似出错自动重启的任务，因此当实际使用它搭建了一个 app 部署到服务器上后发现经常有一些奇怪的问题导致其崩溃挂掉。然而根据 log 来看问题应该不是由于项目代码导致的，可能是 MEANJS 本身的问题，也可能是某些 Lib 的问题。这种情况下，我能想到的暂时性解决方案就是使用 forever 了。</p>\n<p>个人觉得 MEANJS 在 production mode 中也使用 nodemon 来跑 watch 任务有些鸡肋，因为我们并不需要在产品服务器上频繁地更改代码。因此，我直接把它替换掉了。</p>\n<!--more-->\n<p>这里需要注意的是，我们不能直接用 forever 去跑 <code>server.js</code> 脚本，因为这样的话下层代码拿不到 env settings，就会把启动模式设置为默认的开发模式。</p>\n<p>因为 MEANJS 中已经自带了 forever 模块，所以就不用装它本身了，但是要安装 forever 的 grunt 插件：grunt-forever</p>\n<pre><code>npm <span class=\"hljs-keyword\">install</span> grunt-forever -<span class=\"hljs-keyword\">save</span>\n</code></pre><p>在 tasks（initConfig） 中加多一项：</p>\n<pre><code><span class=\"hljs-attribute\">forever</span>: {\n  <span class=\"hljs-attribute\">server</span>: {\n    <span class=\"hljs-attribute\">options</span>: {\n      <span class=\"hljs-attribute\">index</span>: <span class=\"hljs-string\">'server.js'</span>,\n        <span class=\"hljs-attribute\">logFile</span>: <span class=\"hljs-string\">'log.log'</span>,\n        <span class=\"hljs-attribute\">outFile</span>: <span class=\"hljs-string\">'out.log'</span>,\n        <span class=\"hljs-attribute\">errFile</span>: <span class=\"hljs-string\">'err.log'</span>\n    }\n  }\n}\n</code></pre><p>这里指定了 forever 执行的对象，以及 log 文件名，路径可以不指定，默认为项目根目录下的 forever 文件夹。因为这个插件生成的是守护进程，所以 log 只能输出到文件啦。</p>\n<p>最后更改一下 prod task：</p>\n<pre><code>// <span class=\"hljs-keyword\">Run</span><span class=\"bash\"> the project <span class=\"hljs-keyword\">in</span> production mode\n</span>grunt.registerTask(<span class=\"hljs-string\">'prod'</span>, [<span class=\"hljs-string\">'build'</span>, <span class=\"hljs-string\">'env:prod'</span>, <span class=\"hljs-string\">'mkdir:upload'</span>, <span class=\"hljs-string\">'copy:localConfig'</span>, <span class=\"hljs-string\">'forever:server:start'</span>]);\n</code></pre><p>OK，大功告成。</p>\n<p>启动 production 服务器方式：</p>\n<pre><code><span class=\"hljs-attribute\">grunt prod</span>\n</code></pre><p>重启方式：</p>\n<pre><code><span class=\"hljs-selector-tag\">grunt</span> <span class=\"hljs-selector-tag\">forever</span><span class=\"hljs-selector-pseudo\">:server</span><span class=\"hljs-selector-pseudo\">:restart</span>\n</code></pre><p>停止服务器：</p>\n<pre><code><span class=\"hljs-selector-tag\">grunt</span> <span class=\"hljs-selector-tag\">forever</span><span class=\"hljs-selector-pseudo\">:server</span><span class=\"hljs-selector-pseudo\">:stop</span>\n</code></pre><p>&nbsp;</p>\n"}