{"meta":{"id":"angular-tutorial-event-handlers","title":"Angular 教程：事件处理","date":"2015-12-29T11:35:25.000Z","categories":["JavaScript"],"tags":["AngularJs"]},"html":"<p>在这一步中，你将给手机详细页面添加一个可点击的图片切换功能。</p>\n<ul>\n<li>手机列表视图现在显示了一张大图与几张较小的缩略图。当我们点击任意一张缩略图的时候大图都会被其取代。</li>\n</ul>\n<p>最重要的改动如下所示。你可以在<a href=\"https://github.com/angular/angular-phonecat/compare/step-9...step-10\" title=\"See diff on Github\">GitHub</a>上查看它与之前的代码有何区别。</p>\n<hr>\n<h2 role=\"anchor\">\n            <a name=\"控制器\" role=\"anchor\">控制器</a>\n          </h2><p><code>app/js/controllers.js</code>：</p>\n<pre><code>...\n<span class=\"hljs-keyword\">var</span> phonecatControllers = angular.module(<span class=\"hljs-string\">'phonecatControllers'</span>,[]);\n\nphonecatControllers.controller(<span class=\"hljs-string\">'PhoneDetailCtrl'</span>, [<span class=\"hljs-string\">'$scope'</span>, <span class=\"hljs-string\">'$routeParams'</span>, <span class=\"hljs-string\">'$http'</span>,\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">($scope, $routeParams, $http)</span> </span>{\n    $http.get(<span class=\"hljs-string\">'phones/'</span> + $routeParams.phoneId + <span class=\"hljs-string\">'.json'</span>).success(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span> </span>{\n      $scope.phone = data;\n      $scope.mainImageUrl = data.images[<span class=\"hljs-number\">0</span>];\n    });\n\n    $scope.setImage = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(imageUrl)</span> </span>{\n      $scope.mainImageUrl = imageUrl;\n    };\n  }]);\n</code></pre><p>在<code>PhoneDetailCtrl</code>中，我们创建了<code>mainImageUrl</code>模型并把它的初始值设置为手机图片URL列表中的第一项。 同时我们也创建了一个<code>setImage</code>事件处理函数来改变<code>mainImageUrl</code>的值。</p>\n<hr>\n<h2 role=\"anchor\">\n            <a name=\"模板\" role=\"anchor\">模板</a>\n          </h2><p><code>app/partials/phone-detail.html</code>：</p>\n<pre><code>&lt;img ng-src=<span class=\"hljs-string\">\"{{mainImageUrl}}\"</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"phone\"</span>&gt;\n\n...\n\n&lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span></span>=<span class=\"hljs-string\">\"phone-thumbs\"</span>&gt;\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"img in phone.images\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">ng-src</span>=<span class=\"hljs-string\">\"{{img}}\"</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"setImage(img)\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span></span>\n...\n</code></pre><p>我们将<code>mainImageUrl</code>模型绑定到了大图的<code>ngSrc</code>指令上。 同时我们给缩略图注册了一个<code>ngClick</code>事件处理器。当用户点击其中一张缩略图的时候，处理器将使用<code>setImage</code>事件处理函数来动态地改变<code>mainImageUrl</code>的值。</p>\n<hr>\n<p>&nbsp;</p>\n<h2 role=\"anchor\">\n            <a name=\"测试\" role=\"anchor\">测试</a>\n          </h2><p>为了测试这项新功能，我们添加了两个端到端测试。其中一个用来验证大图在默认情况下是否设置成了所有图片中的第一张，另一个则用来验证当点击缩略图的时候大图是否正确地改变了。</p>\n<p><code>test/e2e/scenarios.js</code>：</p>\n<pre><code>...\n  describe(<span class=\"hljs-string\">'Phone detail view'</span>, <span class=\"hljs-keyword\">function</span>() {\n\n...\n\n    <span class=\"hljs-literal\">it</span>(<span class=\"hljs-string\">'should display the first phone image as the main phone image'</span>, <span class=\"hljs-keyword\">function</span>() {\n      expect(element(<span class=\"hljs-keyword\">by</span>.css(<span class=\"hljs-string\">'img.phone'</span>)).getAttribute(<span class=\"hljs-string\">'src'</span>)).toMatch(<span class=\"hljs-regexp\">/img\\/phones\\/nexus-s.0.jpg/</span>);\n    });\n\n\n    <span class=\"hljs-literal\">it</span>(<span class=\"hljs-string\">'should swap main image if a thumbnail image is clicked on'</span>, <span class=\"hljs-keyword\">function</span>() {\n      element(<span class=\"hljs-keyword\">by</span>.css(<span class=\"hljs-string\">'.phone-thumbs li:nth-child(3) img'</span>)).click();\n      expect(element(<span class=\"hljs-keyword\">by</span>.css(<span class=\"hljs-string\">'img.phone'</span>)).getAttribute(<span class=\"hljs-string\">'src'</span>)).toMatch(<span class=\"hljs-regexp\">/img\\/phones\\/nexus-s.2.jpg/</span>);\n\n      element(<span class=\"hljs-keyword\">by</span>.css(<span class=\"hljs-string\">'.phone-thumbs li:nth-child(1) img'</span>)).click();\n      expect(element(<span class=\"hljs-keyword\">by</span>.css(<span class=\"hljs-string\">'img.phone'</span>)).getAttribute(<span class=\"hljs-string\">'src'</span>)).toMatch(<span class=\"hljs-regexp\">/img\\/phones\\/nexus-s.0.jpg/</span>);\n    });\n  });\n</code></pre><p>你可以通过执行<code>npm run protractor</code>来观察测试运行。 同时因为我们给<code>PhoneDetailCtrl</code>控制器添加了<code>mainImageUrl</code>模型，所以单元测试也需要做些重构。如下所示，为了让测试通过，我们创建了<code>xyzPhoneData</code>函数用来返回带<code>images</code>属性的正确的JSON数据。</p>\n<p><code>test/unit/controllersSpec.js</code>：</p>\n<pre><code>...\n  beforeEach(module(<span class=\"hljs-string\">'phonecatApp'</span>));\n\n...\n\n describe(<span class=\"hljs-string\">'PhoneDetailCtrl'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">var</span> scope, $httpBackend, ctrl,\n        xyzPhoneData = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span> </span>{\n          <span class=\"hljs-keyword\">return</span> {\n            name: <span class=\"hljs-string\">'phone xyz'</span>,\n            images: [<span class=\"hljs-string\">'image/url1.png'</span>, <span class=\"hljs-string\">'image/url2.png'</span>]\n          }\n        };\n\n\n    beforeEach(inject(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(_$httpBackend_, $rootScope, $routeParams, $controller)</span> </span>{\n      $httpBackend = _$httpBackend_;\n      $httpBackend.expectGET(<span class=\"hljs-string\">'phones/xyz.json'</span>).respond(xyzPhoneData());\n\n      $routeParams.phoneId = <span class=\"hljs-string\">'xyz'</span>;\n      scope = $rootScope.$new();\n      ctrl = $controller(<span class=\"hljs-string\">'PhoneDetailCtrl'</span>, {$scope: scope});\n    }));\n\n\n    it(<span class=\"hljs-string\">'should fetch phone detail'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span> </span>{\n      expect(scope.phone).toBeUndefined();\n      $httpBackend.flush();\n\n      expect(scope.phone).toEqual(xyzPhoneData());\n    });\n  });\n</code></pre><p>现在单元测试应该能通过了。</p>\n<h2 role=\"anchor\">\n            <a name=\"课外扩展\" role=\"anchor\">课外扩展</a>\n          </h2><p>我们来给<code>PhoneDetailCtrl</code>添加一个新的控制方法：</p>\n<pre><code>$scope.hello = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(name)</span> </span>{\n    alert(<span class=\"hljs-string\">'Hello '</span> + (name || <span class=\"hljs-string\">'world'</span>) + <span class=\"hljs-string\">'!'</span>);\n}\n</code></pre><p>并且给<code>phone-detail.html</code>模板添加：</p>\n<pre><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ng-click</span>=<span class=\"hljs-string\">\"hello('Elmo')\"</span>&gt;</span>Hello<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre><h2 role=\"anchor\">\n            <a name=\"总结\" role=\"anchor\">总结</a>\n          </h2><p>现在我们已经完成了图片切换功能，可以通过<a href=\"/p/angular-tutorial-rest-and-custom-services/\">step 11</a>来学习一种更好的抓取数据的方式。</p>\n"}