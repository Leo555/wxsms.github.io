{"meta":{"id":"css-triangle","title":"CSS 绘制三角形","date":"2016-02-15T10:58:33.000Z","categories":["CSS"],"tags":["CSS3"]},"html":"<p>关于如何使用CSS中的border属性绘制各式各样的三角形。下面有一个国外友人制作的动画，对其原理进行了直观的阐释，我简单地做了点翻译。</p>\n<p class='codepen'  data-height='387' data-theme-id='0' data-slug-hash='zrbGpx' data-default-tab='result' data-animations='run' data-editable='' data-embed-version='2'>\n  See the Pen <a href=’http://codepen.io/edisond/pen/zrbGpx/’>Animation to Explain CSS Triangles</a> by wxsm (<a href=’http://codepen.io/edisond’>@edisond</a>) on <a href=’http://codepen.io’>CodePen</a>.0\n</p>\n\n<p>&nbsp;</p>\n<p>要点：</p>\n<ul>\n<li>元素不能有宽高（当然也可以稍作变化来绘制梯形）</li>\n<li>只有一边border显示颜色，其宽度即为三角形的高</li>\n<li>与其相邻的border设置为透明色，它们将决定三角形的形状</li>\n</ul>\n<!--more-->\n<p>更多的例子：</p>\n<pre><code><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>CSS Triangle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n        <span class=\"hljs-selector-class\">.arrow-up</span> {\n            <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">border-left</span>: <span class=\"hljs-number\">5px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">5px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-bottom</span>: <span class=\"hljs-number\">5px</span> solid black;\n        }\n\n        <span class=\"hljs-selector-class\">.arrow-down</span> {\n            <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">border-left</span>: <span class=\"hljs-number\">20px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">20px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">20px</span> solid <span class=\"hljs-number\">#f00</span>;\n        }\n\n        <span class=\"hljs-selector-class\">.arrow-right</span> {\n            <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">60px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-bottom</span>: <span class=\"hljs-number\">60px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-left</span>: <span class=\"hljs-number\">60px</span> solid green;\n        }\n\n        <span class=\"hljs-selector-class\">.arrow-left</span> {\n            <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">10px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-bottom</span>: <span class=\"hljs-number\">10px</span> solid transparent;\n            <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">10px</span> solid blue;\n        }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrow-up\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrow-down\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrow-left\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre><p>效果：</p>\n<p>以上的例子都是使用实体元素来绘制三角形，其实实际情况下使用伪元素的（before，after）会更多一些。</p>\n"}